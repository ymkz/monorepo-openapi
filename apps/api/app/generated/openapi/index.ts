/**
 * Generated by orval v7.1.0 🍺
 * Do not edit manually.
 * API仕様書 - monorepo-openapi
 * ## 概要

OpenAPIでbackendとfrontendをいい感じに管理するお試し実装のリポジトリ\
`spec`で管理するOpenAPIのスキーマをマスタとして管理する

## アクセス制御

| 環境        | ロール   |
| ---------- | --------|
| production | ✓       |
| beta       | ✓       |
| alpha      | ✓       |

## 問い合わせ

* TBD

 * OpenAPI spec version: 0.1.0
 */
import { z as zod } from 'zod'

/**
 * 条件に一致するTodoのリストを取得する
 * @summary findTodos
 */
export const findTodosQueryParams = zod.object({
	limit: zod.number().optional(),
	offset: zod.number().optional(),
})

export const findTodosResponse = zod.object({
	pagination: zod.object({
		totalCounts: zod.number(),
		totalPages: zod.number(),
		currentPage: zod.number(),
		countPerPage: zod.number(),
	}),
	todos: zod.array(
		zod.object({
			id: zod.number(),
			title: zod.string(),
			completedAt: zod.string().datetime().optional(),
			createdAt: zod.string().datetime(),
			updatedAt: zod.string().datetime().optional(),
			deletedAt: zod.string().datetime().optional(),
		}),
	),
})

/**
 * Todoを作成する
 * @summary createTodo
 */
export const createTodoBody = zod.object({
	title: zod.string(),
})

export const createTodoResponse = zod.object({
	id: zod.number(),
	title: zod.string(),
	completedAt: zod.string().datetime().optional(),
	createdAt: zod.string().datetime(),
	updatedAt: zod.string().datetime().optional(),
	deletedAt: zod.string().datetime().optional(),
})

/**
 * 指定したidのTodoを更新する
 * @summary updateTodo
 */
export const updateTodoParams = zod.object({
	id: zod.number(),
})

export const updateTodoBody = zod.object({
	title: zod.string(),
})

export const updateTodoResponse = zod.object({
	id: zod.number(),
	title: zod.string(),
	completedAt: zod.string().datetime().optional(),
	createdAt: zod.string().datetime(),
	updatedAt: zod.string().datetime().optional(),
	deletedAt: zod.string().datetime().optional(),
})

/**
 * 指定したidのTodoを取得する
 * @summary getTodo
 */
export const getTodoParams = zod.object({
	id: zod.number(),
})

export const getTodoResponse = zod.object({
	id: zod.number(),
	title: zod.string(),
	completedAt: zod.string().datetime().optional(),
	createdAt: zod.string().datetime(),
	updatedAt: zod.string().datetime().optional(),
	deletedAt: zod.string().datetime().optional(),
})

/**
 * 指定したidのTodoを削除する
 * @summary deleteTodo
 */
export const deleteTodoParams = zod.object({
	id: zod.number(),
})

/**
 * 指定したidのTodoを完了にする
 * @summary completeTodo
 */
export const completeTodoParams = zod.object({
	id: zod.number(),
})

export const completeTodoResponse = zod.object({
	id: zod.number(),
	title: zod.string(),
	completedAt: zod.string().datetime().optional(),
	createdAt: zod.string().datetime(),
	updatedAt: zod.string().datetime().optional(),
	deletedAt: zod.string().datetime().optional(),
})
