// This file is auto-generated by @hey-api/openapi-ts

/**
 * Problem Details (RFC9457)
 */
export type ProblemDetails = {
	/**
	 * 主要なエラーの要因
	 */
	title: string
	/**
	 * エラーコード
	 */
	type: string
	/**
	 * エラーの詳細に関するメッセージ
	 */
	detail: string
	/**
	 * HTTPステータスコード
	 */
	status: number
}

export type Todo = {
	/**
	 * 連番で発番されるid
	 */
	id: string
	/**
	 * タイトル
	 */
	title: string
	/**
	 * 完了時刻（ISO8601）（最後に完了にした時刻が入る）
	 */
	completedAt?: string
	/**
	 * 作成時刻（ISO8601）
	 */
	createdAt: string
	/**
	 * 更新時刻（ISO8601）（更新されるたびに更新時刻が入る）
	 */
	updatedAt?: string
	/**
	 * 削除時刻（ISO8601）（論理削除されたら削除時刻が入る）
	 */
	deletedAt?: string
}

export type FindTodosData = {
	query?: {
		limit?: number
	}
}

export type FindTodosResponse = Array<Todo>

export type FindTodosError = ProblemDetails

export type CreateTodoData = {
	body: {
		/**
		 * タイトル
		 */
		title: string
	}
}

export type CreateTodoResponse = Todo

export type CreateTodoError = ProblemDetails

export type UpdateTodoData = {
	body: {
		/**
		 * タイトル
		 */
		title: string
	}
	path: {
		id: string
	}
}

export type UpdateTodoResponse = Todo

export type UpdateTodoError = ProblemDetails

export type GetTodoData = {
	path: {
		id: string
	}
}

export type GetTodoResponse = Todo

export type GetTodoError = ProblemDetails

export type DeleteTodoData = {
	path: {
		id: string
	}
}

export type DeleteTodoResponse = unknown

export type DeleteTodoError = ProblemDetails

export type CompleteTodoData = {
	path: {
		id: string
	}
}

export type CompleteTodoResponse = Todo

export type CompleteTodoError = ProblemDetails

export type $OpenApiTs = {
	'/todos': {
		get: {
			req: FindTodosData
			res: {
				/**
				 * 正常時の応答
				 */
				'200': Array<Todo>
				/**
				 * リクエストが不正だった場合の応答
				 */
				'400': ProblemDetails
				/**
				 * エラーが発生した場合の応答
				 */
				'500': ProblemDetails
			}
		}
		post: {
			req: CreateTodoData
			res: {
				/**
				 * 正常時の応答
				 */
				'200': Todo
				/**
				 * リクエストが不正だった場合の応答
				 */
				'400': ProblemDetails
				/**
				 * エラーが発生した場合の応答
				 */
				'500': ProblemDetails
			}
		}
	}
	'/todos/{id}': {
		put: {
			req: UpdateTodoData
			res: {
				/**
				 * 正常時の応答
				 */
				'200': Todo
				/**
				 * リクエストが不正だった場合の応答
				 */
				'400': ProblemDetails
				/**
				 * リクエストがされたidが存在しない場合の応答
				 */
				'404': ProblemDetails
				/**
				 * エラーが発生した場合の応答
				 */
				'500': ProblemDetails
			}
		}
		get: {
			req: GetTodoData
			res: {
				/**
				 * 正常時の応答
				 */
				'200': Todo
				/**
				 * リクエストがされたidが存在しない場合の応答
				 */
				'404': ProblemDetails
				/**
				 * エラーが発生した場合の応答
				 */
				'500': ProblemDetails
			}
		}
		delete: {
			req: DeleteTodoData
			res: {
				/**
				 * 正常時の応答
				 */
				'200': unknown
				/**
				 * リクエストがされたidが存在しない場合の応答
				 */
				'404': ProblemDetails
				/**
				 * エラーが発生した場合の応答
				 */
				'500': ProblemDetails
			}
		}
	}
	'/todos/{id}/complete': {
		post: {
			req: CompleteTodoData
			res: {
				/**
				 * 正常時の応答
				 */
				'200': Todo
				/**
				 * リクエストがされたidが存在しない場合の応答
				 */
				'404': ProblemDetails
				/**
				 * エラーが発生した場合の応答
				 */
				'500': ProblemDetails
			}
		}
	}
}
